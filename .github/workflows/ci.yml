name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint-and-unit:
    timeout-minutes: 25
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install npm dependencies
        run: npm ci
      - name: Run Jest tests
        run: npm test -- --json --outputFile=jest-results.json
      - name: Upload Jest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-results
          path: jest-results.json
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt
      - name: Lint
        run: |
          pre-commit install
          pre-commit run --all-files
      - name: Unit tests
        run: pytest -m "not integration and not gpu and not slow" --junitxml=unit-tests.xml --cov=. --cov-report=xml
      - name: Upload JUnit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: unit-tests.xml
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage.xml

  integration:
    needs: lint-and-unit
    timeout-minutes: 25
    runs-on: ubuntu-22.04
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install npm dependencies
        run: npm ci
      - name: Run Jest tests
        run: npm test -- --json --outputFile=jest-results.json
      - name: Upload Jest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-results
          path: jest-results.json
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test
        run: |
          pytest -m "integration and not gpu" \
            --junitxml=integration-tests.xml \
            --cov=. --cov-report=xml
      - name: Upload JUnit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: integration-tests.xml
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-coverage
          path: coverage.xml
